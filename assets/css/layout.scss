/***********
LAYOUT STUFF GOES HERE

Put code which should work in both cases (CSSGrid an nonGrid) at top
Put nonGrid code into the layout-page-flexbox() class in layout-flex.scss
CSSGrid code goes into the @supports (grid-area: auto) { CODE }
**************/

//Global content
html {
  width: 100vw;
  min-height: 100vh;
  height: 100%;
  background-color: pink;
}

.main-wrapper {
  width: 100%;
  height: 100%;
  max-width:$max-page-width;
  background-color: lightblue;
  @extend .center-item;
  min-height: 100vh;
}


@if $css-grid {
  // e.g. Opera
  @supports not(grid-area: auto) {
    .no-grid {
      @include layout-page-flex();
    }
  }
  //IE 11
  @media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {
      .no-grid {
        @include layout-page-flex();
      }
    }
  //Begin of CSS Grid supported styles
  @supports (grid-area: auto) {
    .grid {
      display: grid;
      grid-gap: 10px;
      grid-template-columns: 1fr;
      grid-auto-rows: auto;
    }

    @media only screen and (min-width: $breakpoint-small) {
      .grid {
        grid-template-columns: 1fr 2fr;
      }
      .header {
        grid-column: 1 / -1;
      }
      .sidebar {
        grid-column: 1 / 1;
        grid-row: 2;
      }
      .content {
        grid-column: 2 / -1;
        grid-row: 2;
      }
      footer {
        grid-column: 1 / -1;
        grid-row: 3;
      }
    }
  }
} @else {
  .no-grid {
      @include layout-page-flex();
    }
  }





